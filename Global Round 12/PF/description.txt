To help those contestants who struggle a lot in contests, the headquarters of
Codeforces are planning to introduce Division 5. In this new division, the tags
of all problems will be announced prior to the round to help the contestants.

The contest consists of 𝑛 problems, where the tag of the 𝑖-th problem is
denoted by an integer 𝑎𝑖.

You want to AK (solve all problems). To do that, you must solve the problems in
some order. To make the contest funnier, you created extra limitations on
yourself. You do not want to solve two problems consecutively with the same tag
since it is boring. Also, you are afraid of big jumps in difficulties while
solving them, so you want to minimize the number of times that you solve two
problems consecutively that are not adjacent in the contest order.

Formally, your solve order can be described by a permutation 𝑝 of length 𝑛.
The cost of a permutation is defined as the number of indices 𝑖 (1≤𝑖<𝑛) where
|𝑝𝑖+1−𝑝𝑖|>1. You have the requirement that 𝑎𝑝𝑖≠𝑎𝑝𝑖+1 for all 1≤𝑖<𝑛.

You want to know the minimum possible cost of permutation that satisfies the
requirement. If no permutations meet this requirement, you should report about
it.

Input The first line contains a single integer 𝑡 (1≤𝑡≤104) — the number of
test cases.

The first line of the description of each test case contains a single integer 𝑛
(1≤𝑛≤105) — the number of problems in the contest.

The next line contains 𝑛 integers 𝑎1,𝑎2,…𝑎𝑛 (1≤𝑎𝑖≤𝑛) — the tags of the
problems.

It is guaranteed that the sum of 𝑛 over all test cases does not exceed 105.

Output For each test case, if there are no permutations that satisfy the
required condition, print −1. Otherwise, print the minimum possible cost of a
permutation that satisfies the required condition.

Example inputCopy 4 6 2 1 2 3 1 1 5 1 1 1 2 2 8 7 7 2 7 7 1 8 7 10 1 2 3 4 1 1 2
3 4 1 outputCopy 1 3 -1 2