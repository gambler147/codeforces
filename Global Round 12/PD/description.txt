On the competitive programming platform CodeCook, every person has a rating
graph described by an array of integers 𝑎 of length 𝑛. You are now updating
the infrastructure, so you've created a program to compress these graphs.

The program works as follows. Given an integer parameter 𝑘, the program takes
the minimum of each contiguous subarray of length 𝑘 in 𝑎.

More formally, for an array 𝑎 of length 𝑛 and an integer 𝑘, define the
𝑘-compression array of 𝑎 as an array 𝑏 of length 𝑛−𝑘+1, such that
𝑏𝑗=min𝑗≤𝑖≤𝑗+𝑘−1𝑎𝑖 For example, the 3-compression array of [1,3,4,5,2] is
[min{1,3,4},min{3,4,5},min{4,5,2}]=[1,3,2]. A permutation of length 𝑚 is an
array consisting of 𝑚 distinct integers from 1 to 𝑚 in arbitrary order. For
example, [2,3,1,5,4] is a permutation, but [1,2,2] is not a permutation (2
appears twice in the array) and [1,3,4] is also not a permutation (𝑚=3 but
there is 4 in the array).

A 𝑘-compression array will make CodeCook users happy if it will be a
permutation. Given an array 𝑎, determine for all 1≤𝑘≤𝑛 if CodeCook users will
be happy after a 𝑘-compression of this array or not.

Input The first line contains a single integer 𝑡 (1≤𝑡≤104) — the number of
test cases.

The first line of the description of each test case contains a single integer 𝑛
(1≤𝑛≤3⋅105) — the length of the array.

The second line of the description of each test case contains 𝑛 integers
𝑎1,…,𝑎𝑛 (1≤𝑎𝑖≤𝑛) — the elements of the array.

It is guaranteed, that the sum of 𝑛 for all test cases does not exceed 3⋅105.

Output For each test case, print a binary string of length 𝑛.

The 𝑘-th character of the string should be 1 if CodeCook users will be happy
after a 𝑘-compression of the array 𝑎, and 0 otherwise.

Example inputCopy 5 5 1 5 3 4 2 4 1 3 2 1 5 1 3 3 3 2 10 1 2 3 4 5 6 7 8 9 10 3
3 3 2 outputCopy 10111 0001 00111 1111111111 000