Define a chain:

a chain of length 1 is a single vertex; a chain of length 𝑥 is a chain of
length 𝑥−1 with a new vertex connected to the end of it with a single edge. You
are given 𝑛 chains of lengths 𝑙1,𝑙2,…,𝑙𝑛. You plan to build a tree using
some of them.

Each vertex of the tree is either white or black. The tree initially only has a
white root vertex. All chains initially consist only of white vertices. You can
take one of the chains and connect any of its vertices to any white vertex of
the tree with an edge. The chain becomes part of the tree. Both endpoints of
this edge become black. Each chain can be used no more than once. Some chains
can be left unused. The distance between two vertices of the tree is the number
of edges on the shortest path between them.

If there is at least 𝑘 white vertices in the resulting tree, then the value of
the tree is the distance between the root and the 𝑘-th closest white vertex.

What's the minimum value of the tree you can obtain? If there is no way to build
a tree with at least 𝑘 white vertices, then print -1.

Input The first line contains two integers 𝑛 and 𝑘 (1≤𝑛≤2⋅105, 2≤𝑘≤109) —
the number of chains and the minimum number of white vertices a tree should have
to have a value.

The second line contains 𝑛 integers 𝑙1,𝑙2,…,𝑙𝑛 (3≤𝑙𝑖≤2⋅105) — the lengths
of the chains.

Output Print a single integer. If there is no way to build a tree with at least
𝑘 white vertices, then print -1. Otherwise, print the minimum value the tree
can have.

Examples
inputCopy
1 2
3
outputCopy
2
inputCopy
3 3
4 3 3
outputCopy
3
inputCopy
3 5
4 3 4
outputCopy
4
inputCopy
2 10
5 7
outputCopy
-1